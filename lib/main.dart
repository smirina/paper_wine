import 'package:flutter/material.dart';
// import 'package:flutter/rendering.dart';

import './pages/products.dart';
import './pages/product.dart';

//void main() => runApp(MyApp());

void main() {
  // debugPaintSizeEnabled = true;
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return _MyAppState();
  }
}

class _MyAppState extends State<MyApp> {
  Set<String> _userTags = Set();
  List<String> _basicTags = [
    '–±–µ–ª–æ–µ',
    '–ø–æ–ª—É—Å—É—Ö–æ–µ',
    '–∫—Ä–∞—Å–Ω–æ–µ',
    '—Å—É—Ö–æ–µ',
    '–ü—è—Ç–µ—Ä–æ—á–∫–∞',
    'Vinissimo',
    '–ê—Ä–æ–º–∞—Ç–Ω—ã–π –ú–∏—Ä',
    '–∫ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º',
    '–∫ –ø–∞—Å—Ç–µ'
  ];

  List<Map<String, dynamic>> _filteredProducts = [];
  List<Map<String, dynamic>> _products = [
    {
      'title': 'Prosecco Decordi Brut',
      'description': 'Decordi Brut ‚Äì —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ—Å–µ–∫–∫–æ –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–∫–∏',
      'image': 'assets/prosecco.png',
      'tags': [
        '–∏–≥—Ä–∏—Å—Ç–æ–µ',
        'Vinissimo',
        '–ê—Ä–æ–º–∞—Ç–Ω—ã–π –ú–∏—Ä',
        '–≤–∞–Ω–∏–ª—å',
        '–∫ –ª–µ–≥–∫–∏–º –∑–∞–∫—É—Å–∫–∞–º'
      ]
    },
    {
      'title': 'Urban Riesling 2016',
      'description': '–ù–µ–º–µ—Ü–∫–∏–π Urban Riesling 2016 –≥–æ–¥–∞',
      'image': 'assets/urban_riesling.png',
      'tags': ['–±–µ–ª–æ–µ', '–ø–æ–ª—É—Å—É—Ö–æ–µ', '—Ä–∏—Å–ª–∏–Ω–≥', '–ê—à–∞–Ω', '–∞–∑–∏–∞—Ç—Å–∫–∞—è –∫—É—Ö–Ω—è']
    },
    {
      'title': 'Promesa Carmenere Reserva 2014',
      'description':
          'Promesa Carmenere Reserva 2014, —á–∏–ª–∏–π—Å–∫–æ–µ –∫—Ä–∞—Å–Ω–æ–µ –∏–∑ ¬´–ü—è—Ç–µ—Ä–æ—á–∫–∏¬ª!',
      'image': 'assets/promesa.png',
      'tags': ['–∫—Ä–∞—Å–Ω–æ–µ', '—Å—É—Ö–æ–µ', '–∫ –º—è—Å—É', '–ê—à–∞–Ω', '–ü—è—Ç–µ—Ä–æ—á–∫–∞']
    },
    {
      'title': '–ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—Å–∫–æ–µ –≥–æ–ª—É–±–æ–∫ 2016',
      'description':
          '–†—É—Å—Å–∫–æ–µ –≤–∏–Ω–æ –æ—Ç –≤–∏–Ω–æ–¥–µ–ª—å–Ω–∏ ¬´–í–µ–¥–µ—Ä–Ω–∏–∫–æ–≤¬ª: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à–µ–µ –¥–ª—è —Å–≤–æ–µ–π —Ü–µ–Ω—ã üòï',
      'image': 'assets/vedernikov.png',
      'tags': ['–∫—Ä–∞—Å–Ω–æ–µ', '—Å—É—Ö–æ–µ', '–ö–∞—Ä—É—Å–µ–ª—å']
    },
    {
      'title': 'Douglas Green 2016',
      'description':
          'Douglas Green 2016 –∏–∑ –Æ–ê–†, –Ω–µ–±–∞–Ω–∞–ª—å–Ω–æ–µ –±–µ–ª–æ–µ –¥–ª—è —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞',
      'image': 'assets/douglas.png',
      'tags': [
        '–±–µ–ª–æ–µ',
        '—Å—É—Ö–æ–µ',
        '–ê—Ä–æ–º–∞—Ç–Ω—ã–π –ú–∏—Ä',
        '–∫ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º',
        '–∫ —Å—É—à–∏',
        '–∫ –ø–∞—Å—Ç–µ'
      ]
    },
    {
      'title': 'Azumbre verdejo',
      'description':
          'Azumbre verdejo 2016: –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –±–µ–ª–æ–µ, –ø—Ä–æ—Å–ª–∞–≤–∏–≤—à–µ–µ—Å—è –Ω–∞ –≤—Å—é –ò—Å–ø–∞–Ω–∏—é –∏ –∑–∞ –µ—ë –ø—Ä–µ–¥–µ–ª–∞–º–∏',
      'image': 'assets/azumbre.png',
      'tags': [
        '–±–µ–ª–æ–µ', '—Å—É—Ö–æ–µ', 'Vinissimo', '–∫ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º'
      ]
    },
    {
      'title': 'Hardy‚Äôs Legacy Red',
      'description':
          'Hardy‚Äôs Legacy Red: –∫—Ä–∞—Å–Ω–æ–µ –∏–∑ –ê–≤—Å—Ç—Ä–∞–ª–∏–∏ —Å –∞—Ä–æ–º–∞—Ç–æ–º —Å–ø–µ–ª—ã—Ö —è–≥–æ–¥',
      'image': 'assets/hardy.png',
      'tags': [
        '–∫—Ä–∞—Å–Ω–æ–µ', '—Å—É—Ö–æ–µ', '–†–æ—Å–ê–ª', '–û–∫–µ–π', '–ü—Ä–∏–∑–º–∞', '–∫ –ø–∞—Å—Ç–µ', '–∫ –¥–æ—Å—Ç–∞–≤–∫–µ', '–∫ —à–∞—à–ª—ã–∫–∞–º'
      ]
    },
  ];

  void initState() {
    super.initState();
    _filteredProducts = _products;
  }

  void _filterProducts() {
    setState(() {
      _filteredProducts = _products
          .where((i) => i['tags'].toSet().containsAll(_userTags))
          .toList();
    });
  }

  void _toggleFilter(element) {
    setState(() {
      if (_userTags.contains(element)) {
        _userTags.remove(element);
      } else {
        _userTags.add(element);
      }
    });
    print(_userTags);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
        theme: ThemeData(
            brightness: Brightness.light,
            primarySwatch: Colors.red,
            accentColor: Colors.redAccent),
        home: Scaffold(
            appBar: AppBar(
              title: Text('EasyList'),
            ),
            body: ListView(
              children: [
                Wrap(
                    children: _basicTags
                        .map(
                          (element) => RaisedButton(
                            
                                onPressed: () {
                                  _toggleFilter(element);
                                  _filterProducts();
                                },
                                child: Text(element),
                                shape: new RoundedRectangleBorder(
                                    borderRadius:
                                        new BorderRadius.circular(30.0)),
                                color: _userTags.contains(element) ? Colors.amber : Colors.red,
                                splashColor: Colors.redAccent,
                                textColor: Colors.white,
                              ),
                        )
                        .toList()),
                Column(
                    children: _filteredProducts
                        .map(
                          (element) => Card(
                                child: Column(
                                  children: <Widget>[
                                    Image.asset(element['image']),
                                    Container(
                                        padding: EdgeInsets.all(12.0),
                                        child: Text(
                                          element['description'],
                                          style: TextStyle(
                                            fontWeight: FontWeight.bold,
                                            color: Colors.blueGrey,
                                            fontSize: 20.0,
                                          ),
                                          softWrap: true,
                                          
                                        )),
                                  ],
                                ),
                              ),
                        )
                        .toList()),
              ],
            )));
  }
}
